import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

train = pd.read_csv('cr_loan2.csv')
original = pd.read_csv('cr_loan2.csv')

train.head()

print(train.dtypes)

    person_age                      int64
    person_income                   int64
    person_home_ownership          object
    person_emp_length             float64
    loan_intent                    object
    loan_grade                     object
    loan_amnt                       int64
    loan_int_rate                 float64
    loan_status                     int64
    loan_percent_income           float64
    cb_person_default_on_file      object
    cb_person_cred_hist_length      int64
    dtype: object

train.columns
    Index(['person_age', 'person_income', 'person_home_ownership',
           'person_emp_length', 'loan_intent', 'loan_grade', 'loan_amnt',
           'loan_int_rate', 'loan_status', 'loan_percent_income',
           'cb_person_default_on_file', 'cb_person_cred_hist_length'],
          dtype='object')
   
# 12 columns are present
 
train.isnull().sum()
    person_age                       0
    person_income                    0
    person_home_ownership            0
    person_emp_length              895
    loan_intent                      0
    loan_grade                       0
    loan_amnt                        0
    loan_int_rate                 3116
    loan_status                      0
    loan_percent_income              0
    cb_person_default_on_file        0
    cb_person_cred_hist_length       0

# So loan interest rate and employment length are the variables for which we need to do impuatation.
    
# Distribution of loan interest rate
plt.hist(train['loan_int_rate'], bins='auto', alpha=0.7)
plt.xlabel('Loan interest rate')
plt.show()
￼
# 7.5 having the highest frequency is the median of interest rate distribution and the distribution is not unnimodal  nor a normal distributionn so taking mean to impute th missig
values might no￼￼￼￼t be the appropriate approach.

plt.scatter(train['person_income'], train['person_age'], alpha=0.5)
plt.xlabel('Person income')
plt.ylabel('person age')
plt.show()

#Person age above 100 is not possible so we have to remove those data points or replace them with suitable value.
#Plot describe some form of linear relationship with some outlier

#Relationship among variables using crosstable
pd.crosstab(train['loan_intent'], train['loan_status'], margins=True)

    loan_status            0     1    All
    loan_intent                          
    DEBTCONSOLIDATION   3722  1490   5212
    EDUCATION           5342  1111   6453
    HOMEIMPROVEMENT     2664   941   3605
    MEDICAL             4450  1621   6071
    PERSONAL            4423  1098   5521
    VENTURE             4872   847   5719
    All                25473  7108  32581

print(pd.crosstab(train['loan_status'],train['person_home_ownership'],values=train['person_emp_length'], aggfunc='max'))

    person_home_ownership  MORTGAGE  OTHER   OWN   RENT
    loan_status                                        
    0                         123.0   24.0  31.0   41.0
    1                          34.0   11.0  17.0  123.0
    
indices = train[train['person_emp_length'] > 60].index
train = train.drop(indices)

print(pd.crosstab(train['loan_status'],train['person_home_ownership'], values=train['person_emp_length'], aggfunc=['min','max']))

                               min                      max                  
    person_home_ownership MORTGAGE OTHER  OWN RENT MORTGAGE OTHER   OWN  RENT
    loan_status                                                              
    0                          0.0   0.0  0.0  0.0     38.0  24.0  31.0  41.0
    1                          0.0   0.0  0.0  0.0     34.0  11.0  17.0  27.0
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
   
   
   
   
